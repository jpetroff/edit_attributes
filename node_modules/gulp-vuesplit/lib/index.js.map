{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/*\n===============================================================================\n  Gulp Vue-Split\n  Copyright 2016 Sebastian Software GmbH <https://www.sebastian-software.de>\n===============================================================================\n*/\n\nimport through from \"through2\"\nimport parse5 from \"parse5\"\nimport deindent from \"de-indent\"\nimport File from \"vinyl\"\nimport postcss from \"postcss\"\nimport series from \"async/series\"\nimport posthtml from \"posthtml\"\nimport postcssModules from \"postcss-modules\"\nimport templateValidate from \"vue-template-validator\"\nimport htmlMinifier from \"html-minifier\"\nimport pathModule from \"path\"\nimport objectGet from \"lodash/get\"\nimport parseAttrs from \"posthtml-attrs-parser\"\nimport crc from \"crc\"\nimport gutil from \"gulp-util\"\n\nvar memCache =\n{\n  css: {},\n  html: {},\n  js: {}\n}\n\nfunction getCssClassName(moduleMapping, cssModuleName)\n{\n  var cssClassName = objectGet(moduleMapping, cssModuleName)\n  if (!cssClassName)\n    throw new Error(`CSS module ${cssModuleName} is not found`)\n\n  if (typeof cssClassName !== \"string\")\n    throw new Error(`CSS module ${cssModuleName} is not a string`)\n\n  return cssClassName\n}\n\nfunction posthtmlCssModules(moduleMapping)\n{\n  return function(tree)\n  {\n    tree.match({ attrs: { \"css-module\": /\\w+/ } }, (node) =>\n    {\n      var attrs = parseAttrs(node.attrs)\n      var cssModuleName = attrs[\"css-module\"]\n      delete attrs[\"css-module\"]\n\n      attrs.class = attrs.class || []\n      attrs.class.push(getCssClassName(moduleMapping, cssModuleName))\n      node.attrs = attrs.compose()\n\n      return node\n    })\n  }\n}\n\nvar templateMinifyOptions =\n{\n  collapseWhitespace: true,\n  removeComments: true,\n  collapseBooleanAttributes: true,\n  removeAttributeQuotes: true,\n  useShortDoctype: true,\n  removeEmptyAttributes: true,\n  removeOptionalTags: true\n}\n\nexport function getContentFromNode(node)\n{\n  var content = deindent(parse5.serialize(node.content || node)).trim()\n  return content ? `${content}\\n` : content\n}\n\nfunction convertFragmentIntoNodeMap(fragment)\n{\n  var nodes = {}\n  fragment.childNodes.forEach((child) =>\n  {\n    // Ignore text (typically just white space) and comment nodes\n    if (child.nodeName === \"#text\" || child.nodeName === \"#comment\")\n      return\n\n    var content = getContentFromNode(child)\n    nodes[child.nodeName] = content\n  })\n\n  return nodes\n}\n\nexport function cleanTemplateText(text)\n{\n  return text.split(\"\\n\").map((line) => line.trim()).join(\"\\n\")\n}\n\nexport function generateHash(filename)\n{\n  const relPath = pathModule.relative(process.cwd(), filename)\n  return crc.crc32(relPath).toString(16)\n}\n\nexport function generateScopedName(name, filename)\n{\n  return `${name}-${generateHash(filename)}`\n}\n\nexport function generateScopedNameFilename(name, filename)\n{\n  return `${pathModule.basename(filename).split('.')[0]}-${name}`\n}\n\nexport default function vueSplitPlugin(config={})\n{\n  var moduleMapping = null\n\n  function processStyle(done, text, path, base)\n  {\n    if (!text)\n      return done()\n\n    let scopeNameFn = generateScopedName\n\n    if ( config.cssFilenameScoped ) {\n      scopeNameFn = generateScopedNameFilename\n    }\n\n    return postcss([\n      postcssModules({\n        generateScopedName: scopeNameFn,\n        getJSON: function(cssFileName, json)\n        {\n          moduleMapping = json\n        }\n      })\n    ])\n    .process(text, {\n      from: path\n    })\n    .then((result) =>\n    {\n      if (memCache.css[path] === result.css)\n        return done()\n\n      memCache.css[path] = result.css\n\n      var cssObj = new File({\n        contents: new Buffer(result.css),\n        path: path.replace(\".vue\", \".css\"),\n        base: base\n      })\n\n      return done(null, cssObj)\n    })\n  }\n\n  var minifyTemplate = true\n\n  function processTemplate(done, text, path, base)\n  {\n    if (!text)\n      return done()\n\n    var warnings = templateValidate(text)\n    warnings.forEach((msg) =>\n    {\n      /* eslint no-console: 0 */\n      console.warn(msg)\n    })\n\n    return posthtml([\n      posthtmlCssModules(moduleMapping)\n    ])\n    .process(text)\n    .then((result) =>\n    {\n      if (memCache.html[path] === result.html)\n        return done()\n\n      memCache.html[path] = result.html\n\n      try\n      {\n        var html = minifyTemplate ? htmlMinifier.minify(result.html, templateMinifyOptions) : cleanTemplateText(result.html)\n\n        new File({\n          contents: new Buffer(html),\n          path: path.replace(\".vue\", \".html\")\n        })\n      }\n      catch (exc)\n      {\n        console.error(`Problem during template processing: ${exc}`)\n        return done(exc)\n      }\n\n      var jsHeader = `/* Generated by gulp-vuesplit - Edit the vue file instead. */\\n/* eslint-disable */\\n`\n      var jsModule = `${jsHeader}export default ${JSON.stringify(html)}`\n      var jsObj = new File({\n        contents: new Buffer(jsModule),\n        path: path.replace(\".vue\", \".html.js\"),\n        base: base\n      })\n\n      return done(null, jsObj)\n    })\n  }\n\n  function processScript(done, text, path, base)\n  {\n    if (!text)\n      return done()\n\n    if (memCache.js[path] === text)\n      return done()\n\n    memCache.js[path] = text\n\n    var fileObj = new File({\n      contents: new Buffer(text),\n      path: path.replace(\".vue\", \".js\"),\n      base: base\n    })\n\n    return done(null, fileObj)\n  }\n\n  function processHash(done, path, base)\n  {\n    const text = JSON.stringify({\n      hash: generateHash(path)\n    })\n\n    const fileObj = new File({\n      contents: new Buffer(text),\n      path: path.replace(\".vue\", \".json\"),\n      base: base\n    })\n\n    return done(null, fileObj)\n  }\n\n\n  function transform(file, encoding, callback)\n  {\n    /* eslint no-invalid-this: 0 */\n\n    if (file.isNull())\n      return callback(null, file)\n\n    if (file.isStream())\n      return callback(new gutil.PluginError(\"gulp-vuesplit\", \"Streams are not supported\"))\n\n    var content = file.contents.toString(\"utf8\")\n    var fragment = parse5.parseFragment(content, {\n      locationInfo: true\n    })\n\n    var nodes = convertFragmentIntoNodeMap(fragment)\n    var self = this\n    var filePath = file.path\n    var fileBase = file.base\n\n    return series([\n      function(done)\n      {\n        processStyle(done, nodes.style, filePath, fileBase)\n      },\n      function(done)\n      {\n        processTemplate(done, nodes.template, filePath, fileBase)\n      },\n      function(done)\n      {\n        processScript(done, nodes.script, filePath, fileBase)\n      },\n      function(done)\n      {\n        processHash(done, filePath, fileBase)\n      }\n    ],\n    (err, results) =>\n    {\n      if (err)\n        return callback(new gutil.PluginError(\"gulp-vuesplit\", err))\n\n      results.forEach((resultFile) => resultFile && self.push(resultFile))\n      return callback()\n    })\n  }\n\n  return through.obj(transform)\n}\n"]}